#version 450

#include "../../common/common.inl"
#define OCTAVES 3
#include "../shared/noise.glsl"

layout(push_constant) uniform TerrainComputePush {
  ivec4 chunk_pos;
  VkDeviceAddress pvoxels;
  VkDeviceAddress pface_buffer;
  VkDeviceAddress phost_draw_info;
};

layout(local_size_x = CHUNK_GENERATION_LOCAL_SIZE_NX, local_size_y = CHUNK_GENERATION_LOCAL_SIZE_NY, local_size_z = CHUNK_GENERATION_LOCAL_SIZE_NZ) in;
void main() {
  float frequency1 = 0.12;

  ivec3 voxel_pos = ivec3(gl_GlobalInvocationID) + chunk_pos.xyz*WORLD_CHUNK_SIZE;

  float base =
    simplex3D(
      voxel_pos * frequency1
    );

  float val = 0.0;
  // Squash factor.
  // Lower => less disturbance
  // Higher => more disturbance, i.e. more "3D Noise like"
  val += base*6.0;

  // Huh interesting. Just 6 and 12 sf with this gives terrain
  // kind of like that modded sky islands thing that could
  // be visited by sleeping in beds, while dreaming...
  //val += pow(base_noise, 8.4)*squash_factors[1];

  // Continetalness
  // Low = off-shore, High = very inland
  float cont_frequency = 0.920;
  float continentalness =
    simplex3D(
      voxel_pos * cont_frequency
    );
  float mod_cont = continentalness > 0.0 ? pow(continentalness, 50.0) : 0.0;

  float surface_level = 48;
  bool cond = int(val+surface_level+mod_cont) > voxel_pos.y;
  VoxelBuffer(pvoxels).voxels[voxel_index_from_coords(voxel_pos)] = cond ? 1 : 0;
}